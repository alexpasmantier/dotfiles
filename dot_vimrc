" automatically install vimplug
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin()
"NOTE: path: '~/.vim/plugged'

Plug 'wadackel/vim-dogrun'
Plug 'lifepillar/vim-solarized8'
Plug 'jnz/studio98'
Plug 'catppuccin/vim', { 'as': 'catppuccin' }
Plug 'tpope/vim-fugitive'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'itchyny/lightline.vim'
Plug 'prabirshrestha/tv.vim'
Plug 'christoomey/vim-tmux-navigator'

call plug#end()

set bg=dark
set relativenumber
set number
set ruler
set scrolloff=10
set laststatus=2
set noshowmode
syntax on
set termguicolors
colorscheme dogrun

let g:lightline = {
	      \ 'colorscheme': 'one',
	            \ }

let &t_SI = "\e[6 q"
let &t_EI = "\e[2 q"

set ignorecase
set incsearch

" use system clipboard by default
set clipboard=unnamed

" Key mappings
let mapleader=" "

" Split navigation
let g:tmux_navigator_no_mappings = 1

nnoremap <silent> <C-h> :<C-U>TmuxNavigateLeft<cr>
nnoremap <silent> <C-j> :<C-U>TmuxNavigateDown<cr>
nnoremap <silent> <C-k> :<C-U>TmuxNavigateUp<cr>
nnoremap <silent> <C-l> :<C-U>TmuxNavigateRight<cr>

" Buffer navigation
nnoremap <S-l> :bnext<CR>
nnoremap <S-h> :bprev<CR>

" Saving and quitting
nnoremap <leader>w :w<CR>
nnoremap <leader><BS> :x<CR>

" File navigation (tv)
nnoremap <C-p> :Tv<CR>

" Fugitive
nnoremap <leader>gg :G<CR>


